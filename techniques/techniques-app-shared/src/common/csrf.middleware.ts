import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';

import * as csrf from 'csurf';

export const csrfProtection = csrf({
  //https://github.com/expressjs/csurf
  value: (req) => {
    const csrfCookieResult = req.cookies['csrf-token'];
    return csrfCookieResult;
  },
  cookie: { key: '_csrf', path: '/', secure: true, httpOnly: true, sameSite: 'none' },
});

@Injectable()
export class CsrfProtectionMiddleware implements NestMiddleware {
  use(req: Request, res: Response, next: NextFunction) {
    return csrfProtection(req, res, next);
  }
}

@Injectable()
export class EnhanceResponse implements NestMiddleware {
  use(req: Request, res: Response, next: NextFunction) {
    const oldSend = res.send;
    res.send = function (data: any) {
      //it successfully validates only token generated by req.csrfToken()
      //https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies
      res.cookie('csrf-token', req.csrfToken(), { httpOnly: true, secure: true, sameSite: 'none' });

      return oldSend.call(res, data);
    };

    next();
  }
}
